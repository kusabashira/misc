#!/usr/bin/perl
use strict;
use warnings;
use utf8;
use Path::Tiny qw(path);
use File::Basename qw(basename);
use Getopt::Long qw(:config posix_default no_ignore_case gnu_compat bundling);
use Algorithm::GenerateSequence;

our $NAME    = basename $0;
our $VERSION = "0.1.0";
our $USAGE   = <<__USAGE__;
Usage: $NAME [OPTION]... [FILE]...
Output direct product of lines of each files.

Options:
  -s, --separator=STRING    use STRING to separate columns (default: \\t)
      --help                display this help text and exit
      --version             display version information and exit
__USAGE__

my $separator = "\t";
GetOptions(
  'separator|s=s' => \$separator,
  'help' => sub {
    print STDERR $USAGE;
    exit 0;
  },
  'version' => sub {
    print STDERR "$VERSION\n";
    exit 0;
  },
) or exit 2;

my $aa;
if (@ARGV < 1) {
  push @$aa, [map { chomp; $_ } <STDIN>];
} else {
  for my $file (@ARGV) {
    push @$aa, [map { chomp; $_ } path($file)->lines];
  }
}

my $productor = Algorithm::GenerateSequence->new(@$aa);
while (my @product = $productor->next) {
  print join($separator, @product),"\n";
}
